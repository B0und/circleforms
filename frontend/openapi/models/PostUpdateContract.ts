/* tslint:disable */
/* eslint-disable */
/**
 * CircleForms
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Gamemode,
    GamemodeFromJSON,
    GamemodeFromJSONTyped,
    GamemodeToJSON,
} from './Gamemode';
import {
    Limitations,
    LimitationsFromJSON,
    LimitationsFromJSONTyped,
    LimitationsToJSON,
} from './Limitations';
import {
    QuestionUpdateContract,
    QuestionUpdateContractFromJSON,
    QuestionUpdateContractFromJSONTyped,
    QuestionUpdateContractToJSON,
} from './QuestionUpdateContract';

/**
 * 
 * @export
 * @interface PostUpdateContract
 */
export interface PostUpdateContract {
    /**
     * 
     * @type {string}
     * @memberof PostUpdateContract
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PostUpdateContract
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PostUpdateContract
     */
    excerpt?: string | null;
    /**
     * 
     * @type {Gamemode}
     * @memberof PostUpdateContract
     */
    gamemode?: Gamemode;
    /**
     * 
     * @type {Limitations}
     * @memberof PostUpdateContract
     */
    limitations?: Limitations;
    /**
     * 
     * @type {Array<QuestionUpdateContract>}
     * @memberof PostUpdateContract
     */
    questions?: Array<QuestionUpdateContract> | null;
}

export function PostUpdateContractFromJSON(json: any): PostUpdateContract {
    return PostUpdateContractFromJSONTyped(json, false);
}

export function PostUpdateContractFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostUpdateContract {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'excerpt': !exists(json, 'excerpt') ? undefined : json['excerpt'],
        'gamemode': !exists(json, 'gamemode') ? undefined : GamemodeFromJSON(json['gamemode']),
        'limitations': !exists(json, 'limitations') ? undefined : LimitationsFromJSON(json['limitations']),
        'questions': !exists(json, 'questions') ? undefined : (json['questions'] === null ? null : (json['questions'] as Array<any>).map(QuestionUpdateContractFromJSON)),
    };
}

export function PostUpdateContractToJSON(value?: PostUpdateContract | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'description': value.description,
        'excerpt': value.excerpt,
        'gamemode': GamemodeToJSON(value.gamemode),
        'limitations': LimitationsToJSON(value.limitations),
        'questions': value.questions === undefined ? undefined : (value.questions === null ? null : (value.questions as Array<any>).map(QuestionUpdateContractToJSON)),
    };
}

