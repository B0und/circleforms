// @ts-nocheck
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CircleForms
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  PostWithQuestionsContract,
  PostWithQuestionsContractFromJSON,
  PostWithQuestionsContractFromJSONTyped,
  PostWithQuestionsContractToJSON
} from "./PostWithQuestionsContract";
import {
  Submission,
  SubmissionFromJSON,
  SubmissionFromJSONTyped,
  SubmissionToJSON
} from "./Submission";

/**
 *
 * @export
 * @interface AnswerPostWithQuestionsContract
 */
export interface AnswerPostWithQuestionsContract {
  /**
   *
   * @type {Array<Submission>}
   * @memberof AnswerPostWithQuestionsContract
   */
  answer?: Array<Submission> | null;
  /**
   *
   * @type {PostWithQuestionsContract}
   * @memberof AnswerPostWithQuestionsContract
   */
  post?: PostWithQuestionsContract;
}

export function AnswerPostWithQuestionsContractFromJSON(
  json: any
): AnswerPostWithQuestionsContract {
  return AnswerPostWithQuestionsContractFromJSONTyped(json, false);
}

export function AnswerPostWithQuestionsContractFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AnswerPostWithQuestionsContract {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    answer: !exists(json, "answer")
      ? undefined
      : json["answer"] === null
      ? null
      : (json["answer"] as Array<any>).map(SubmissionFromJSON),
    post: !exists(json, "post") ? undefined : PostWithQuestionsContractFromJSON(json["post"])
  };
}

export function AnswerPostWithQuestionsContractToJSON(
  value?: AnswerPostWithQuestionsContract | null
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    answer:
      value.answer === undefined
        ? undefined
        : value.answer === null
        ? null
        : (value.answer as Array<any>).map(SubmissionToJSON),
    post: PostWithQuestionsContractToJSON(value.post)
  };
}
