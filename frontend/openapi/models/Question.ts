/* tslint:disable */
/* eslint-disable */
/**
 * CircleForms
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    QuestionType,
    QuestionTypeFromJSON,
    QuestionTypeFromJSONTyped,
    QuestionTypeToJSON,
} from './QuestionType';

/**
 * 
 * @export
 * @interface Question
 */
export interface Question {
    /**
     * 
     * @type {string}
     * @memberof Question
     */
    readonly questionId?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Question
     */
    order?: number;
    /**
     * 
     * @type {QuestionType}
     * @memberof Question
     */
    type: QuestionType;
    /**
     * 
     * @type {string}
     * @memberof Question
     */
    title: string;
    /**
     * 
     * @type {boolean}
     * @memberof Question
     */
    isOptional?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof Question
     */
    questionInfo?: Array<string> | null;
}

export function QuestionFromJSON(json: any): Question {
    return QuestionFromJSONTyped(json, false);
}

export function QuestionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Question {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'questionId': !exists(json, 'question_id') ? undefined : json['question_id'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'type': QuestionTypeFromJSON(json['type']),
        'title': json['title'],
        'isOptional': !exists(json, 'is_optional') ? undefined : json['is_optional'],
        'questionInfo': !exists(json, 'question_info') ? undefined : json['question_info'],
    };
}

export function QuestionToJSON(value?: Question | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'order': value.order,
        'type': QuestionTypeToJSON(value.type),
        'title': value.title,
        'is_optional': value.isOptional,
        'question_info': value.questionInfo,
    };
}

