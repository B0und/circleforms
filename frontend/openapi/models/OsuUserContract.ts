// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CircleForms
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AccountHistory,
    AccountHistoryFromJSON,
    AccountHistoryFromJSONTyped,
    AccountHistoryToJSON,
} from './AccountHistory';
import {
    Kudosu,
    KudosuFromJSON,
    KudosuFromJSONTyped,
    KudosuToJSON,
} from './Kudosu';
import {
    MonthlyPlaycount,
    MonthlyPlaycountFromJSON,
    MonthlyPlaycountFromJSONTyped,
    MonthlyPlaycountToJSON,
} from './MonthlyPlaycount';
import {
    RankHistory,
    RankHistoryFromJSON,
    RankHistoryFromJSONTyped,
    RankHistoryToJSON,
} from './RankHistory';
import {
    StatisticsRulesets,
    StatisticsRulesetsFromJSON,
    StatisticsRulesetsFromJSONTyped,
    StatisticsRulesetsToJSON,
} from './StatisticsRulesets';
import {
    UserBadge,
    UserBadgeFromJSON,
    UserBadgeFromJSONTyped,
    UserBadgeToJSON,
} from './UserBadge';

/**
 * 
 * @export
 * @interface OsuUserContract
 */
export interface OsuUserContract {
    /**
     * 
     * @type {string}
     * @memberof OsuUserContract
     */
    avatar_url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsuUserContract
     */
    country_code?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof OsuUserContract
     */
    is_active?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof OsuUserContract
     */
    is_supporter?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof OsuUserContract
     */
    last_visit?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof OsuUserContract
     */
    pm_friends_only?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OsuUserContract
     */
    username?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsuUserContract
     */
    discord?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof OsuUserContract
     */
    join_date?: Date;
    /**
     * 
     * @type {Kudosu}
     * @memberof OsuUserContract
     */
    kudosu?: Kudosu;
    /**
     * 
     * @type {string}
     * @memberof OsuUserContract
     */
    playmode?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof OsuUserContract
     */
    playstyle?: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof OsuUserContract
     */
    title?: string | null;
    /**
     * 
     * @type {string}
     * @memberof OsuUserContract
     */
    title_url?: string | null;
    /**
     * 
     * @type {Array<AccountHistory>}
     * @memberof OsuUserContract
     */
    account_history?: Array<AccountHistory> | null;
    /**
     * 
     * @type {Array<UserBadge>}
     * @memberof OsuUserContract
     */
    badges?: Array<UserBadge> | null;
    /**
     * 
     * @type {number}
     * @memberof OsuUserContract
     */
    follower_count?: number;
    /**
     * 
     * @type {number}
     * @memberof OsuUserContract
     */
    loved_beatmapset_count?: number;
    /**
     * 
     * @type {Array<MonthlyPlaycount>}
     * @memberof OsuUserContract
     */
    monthly_playcounts?: Array<MonthlyPlaycount> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof OsuUserContract
     */
    previous_usernames?: Array<string> | null;
    /**
     * 
     * @type {number}
     * @memberof OsuUserContract
     */
    ranked_beatmapset_count?: number;
    /**
     * 
     * @type {StatisticsRulesets}
     * @memberof OsuUserContract
     */
    statistics_ruleset?: StatisticsRulesets;
    /**
     * 
     * @type {RankHistory}
     * @memberof OsuUserContract
     */
    rank_history?: RankHistory;
    /**
     * 
     * @type {number}
     * @memberof OsuUserContract
     */
    ranked_and_approved_beatmapset_count?: number;
}

export function OsuUserContractFromJSON(json: any): OsuUserContract {
    return OsuUserContractFromJSONTyped(json, false);
}

export function OsuUserContractFromJSONTyped(json: any, ignoreDiscriminator: boolean): OsuUserContract {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'avatar_url': !exists(json, 'avatar_url') ? undefined : json['avatar_url'],
        'country_code': !exists(json, 'country_code') ? undefined : json['country_code'],
        'is_active': !exists(json, 'is_active') ? undefined : json['is_active'],
        'is_supporter': !exists(json, 'is_supporter') ? undefined : json['is_supporter'],
        'last_visit': !exists(json, 'last_visit') ? undefined : (new Date(json['last_visit'])),
        'pm_friends_only': !exists(json, 'pm_friends_only') ? undefined : json['pm_friends_only'],
        'username': !exists(json, 'username') ? undefined : json['username'],
        'discord': !exists(json, 'discord') ? undefined : json['discord'],
        'join_date': !exists(json, 'join_date') ? undefined : (new Date(json['join_date'])),
        'kudosu': !exists(json, 'kudosu') ? undefined : KudosuFromJSON(json['kudosu']),
        'playmode': !exists(json, 'playmode') ? undefined : json['playmode'],
        'playstyle': !exists(json, 'playstyle') ? undefined : json['playstyle'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'title_url': !exists(json, 'title_url') ? undefined : json['title_url'],
        'account_history': !exists(json, 'account_history') ? undefined : (json['account_history'] === null ? null : (json['account_history'] as Array<any>).map(AccountHistoryFromJSON)),
        'badges': !exists(json, 'badges') ? undefined : (json['badges'] === null ? null : (json['badges'] as Array<any>).map(UserBadgeFromJSON)),
        'follower_count': !exists(json, 'follower_count') ? undefined : json['follower_count'],
        'loved_beatmapset_count': !exists(json, 'loved_beatmapset_count') ? undefined : json['loved_beatmapset_count'],
        'monthly_playcounts': !exists(json, 'monthly_playcounts') ? undefined : (json['monthly_playcounts'] === null ? null : (json['monthly_playcounts'] as Array<any>).map(MonthlyPlaycountFromJSON)),
        'previous_usernames': !exists(json, 'previous_usernames') ? undefined : json['previous_usernames'],
        'ranked_beatmapset_count': !exists(json, 'ranked_beatmapset_count') ? undefined : json['ranked_beatmapset_count'],
        'statistics_ruleset': !exists(json, 'statistics_ruleset') ? undefined : StatisticsRulesetsFromJSON(json['statistics_ruleset']),
        'rank_history': !exists(json, 'rank_history') ? undefined : RankHistoryFromJSON(json['rank_history']),
        'ranked_and_approved_beatmapset_count': !exists(json, 'ranked_and_approved_beatmapset_count') ? undefined : json['ranked_and_approved_beatmapset_count'],
    };
}

export function OsuUserContractToJSON(value?: OsuUserContract | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'avatar_url': value.avatar_url,
        'country_code': value.country_code,
        'is_active': value.is_active,
        'is_supporter': value.is_supporter,
        'last_visit': value.last_visit === undefined ? undefined : (value.last_visit.toISOString()),
        'pm_friends_only': value.pm_friends_only,
        'username': value.username,
        'discord': value.discord,
        'join_date': value.join_date === undefined ? undefined : (value.join_date.toISOString()),
        'kudosu': KudosuToJSON(value.kudosu),
        'playmode': value.playmode,
        'playstyle': value.playstyle,
        'title': value.title,
        'title_url': value.title_url,
        'account_history': value.account_history === undefined ? undefined : (value.account_history === null ? null : (value.account_history as Array<any>).map(AccountHistoryToJSON)),
        'badges': value.badges === undefined ? undefined : (value.badges === null ? null : (value.badges as Array<any>).map(UserBadgeToJSON)),
        'follower_count': value.follower_count,
        'loved_beatmapset_count': value.loved_beatmapset_count,
        'monthly_playcounts': value.monthly_playcounts === undefined ? undefined : (value.monthly_playcounts === null ? null : (value.monthly_playcounts as Array<any>).map(MonthlyPlaycountToJSON)),
        'previous_usernames': value.previous_usernames,
        'ranked_beatmapset_count': value.ranked_beatmapset_count,
        'statistics_ruleset': StatisticsRulesetsToJSON(value.statistics_ruleset),
        'rank_history': RankHistoryToJSON(value.rank_history),
        'ranked_and_approved_beatmapset_count': value.ranked_and_approved_beatmapset_count,
    };
}
