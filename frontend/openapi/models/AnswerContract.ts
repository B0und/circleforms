// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CircleForms
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  Submission,
  SubmissionFromJSON,
  SubmissionFromJSONTyped,
  SubmissionToJSON
} from "./Submission";

/**
 *
 * @export
 * @interface AnswerContract
 */
export interface AnswerContract {
  /**
   *
   * @type {Array<Submission>}
   * @memberof AnswerContract
   */
  submissions?: Array<Submission> | null;
  /**
   *
   * @type {Date}
   * @memberof AnswerContract
   */
  answer_time?: Date;
  /**
   *
   * @type {string}
   * @memberof AnswerContract
   */
  user?: string | null;
}

export function AnswerContractFromJSON(json: any): AnswerContract {
  return AnswerContractFromJSONTyped(json, false);
}

export function AnswerContractFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): AnswerContract {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    submissions: !exists(json, "submissions")
      ? undefined
      : json["submissions"] === null
      ? null
      : (json["submissions"] as Array<any>).map(SubmissionFromJSON),
    answer_time: !exists(json, "answer_time") ? undefined : new Date(json["answer_time"]),
    user: !exists(json, "user") ? undefined : json["user"]
  };
}

export function AnswerContractToJSON(value?: AnswerContract | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    submissions:
      value.submissions === undefined
        ? undefined
        : value.submissions === null
        ? null
        : (value.submissions as Array<any>).map(SubmissionToJSON),
    answer_time: value.answer_time === undefined ? undefined : value.answer_time.toISOString(),
    user: value.user
  };
}
