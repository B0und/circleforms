// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
/**
 * CircleForms
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccountHistory
 */
export interface AccountHistory {
    /**
     * 
     * @type {string}
     * @memberof AccountHistory
     */
    description?: string | null;
    /**
     * 
     * @type {number}
     * @memberof AccountHistory
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof AccountHistory
     */
    length?: number;
    /**
     * 
     * @type {Date}
     * @memberof AccountHistory
     */
    timestamp?: Date;
    /**
     * 
     * @type {string}
     * @memberof AccountHistory
     */
    type?: string | null;
}

export function AccountHistoryFromJSON(json: any): AccountHistory {
    return AccountHistoryFromJSONTyped(json, false);
}

export function AccountHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'length': !exists(json, 'length') ? undefined : json['length'],
        'timestamp': !exists(json, 'timestamp') ? undefined : (new Date(json['timestamp'])),
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function AccountHistoryToJSON(value?: AccountHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'id': value.id,
        'length': value.length,
        'timestamp': value.timestamp === undefined ? undefined : (value.timestamp.toISOString()),
        'type': value.type,
    };
}
